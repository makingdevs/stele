// Generated by CoffeeScript 1.4.0

$(function() {
  var DependienteModel, DependienteView, Dependientes, DependientesView, PerfilModel, PerfilView, modelo, toType;
  toType = function(obj) {
    return {}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
  };
  PerfilModel = Backbone.Model.extend({
    url: function() {
      return "http://localhost:8080/stele/usuario/obtenerPerfilUsuario/";
    }
  });
  PerfilView = Backbone.View.extend({
    render: function() {
      var html, template;
      template = Handlebars.compile(($("#encabezadoUsuario")).html());
      html = template(this.model);
      this.$el.html(html);
      return this;
    }
  });
  DependienteModel = Backbone.Model.extend;
  DependienteView = Backbone.View.extend({
    tagName: "li",
    render: function() {
      var html, template;
      template = Handlebars.compile(($("#dependienteCard")).html());
      html = template(this.model);
      this.$el.html(html);
      return this;
    }
  });
  Dependientes = Backbone.Collection.extend({
    model: DependienteModel
  });
  DependientesView = Backbone.View.extend({
    tagName: "ul",
    render: function() {
      console.log(this);
      console.log(this.collection);
      this.collection.each(function(dependienteModelo) {
        console.log(dependienteView);
        return this;
      });
      $.each(this.collection, function(index, value) {
        var dependienteView;
        dependienteView = new DependienteView({
          model: value
        });
        return this.$el.prepend(dependienteView.render().el);
      });
      return this;
    }
  });
  modelo = new PerfilModel;
  return modelo.fetch({
    success: function(model, response, options) {
      var dependientes, dependientesView, perfilView;
      perfilView = new PerfilView({
        model: response
      });
      ($('#encabezadoContainer')).html(perfilView.render().el);
      dependientes = new Dependientes({
        models: response.dependientes
      });
      dependientesView = new DependientesView({
        collection: dependientes
      });
      return ($('#dependienteContainer')).html(dependientesView.render().el);
    }
  });
});
